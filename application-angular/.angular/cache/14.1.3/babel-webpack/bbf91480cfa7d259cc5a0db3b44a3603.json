{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/admin/Documents/GitHub/newtel/application-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { HttpHeaders } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CommonService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.header = new HttpHeaders(environment.header);\n  }\n\n  checkAccessToken() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      let expires_in = Number(localStorage.getItem('expires_in'));\n\n      if (expires_in < Date.now() + 500000) {\n        _this.httpClient.post('api/refreshToken', {\n          clientId: environment.client_id,\n          clientSecret: environment.clientSecret\n        }, {\n          headers: _this.header\n        }).subscribe(resp => {\n          console.log('resp123: ', resp);\n        });\n      }\n    })();\n  }\n\n}\n\nCommonService.ɵfac = function CommonService_Factory(t) {\n  return new (t || CommonService)(i0.ɵɵinject(i1.HttpClient));\n};\n\nCommonService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CommonService,\n  factory: CommonService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AAAA,SAAqBA,WAArB,QAAwC,sBAAxC;AAEA,SAASC,WAAT,QAA4B,gCAA5B;;;AAKA,OAAM,MAAOC,aAAP,CAAoB;EAExBC,YAAoBC,UAApB,EAA0C;IAAtB;IAClB,KAAKC,MAAL,GAAc,IAAIL,WAAJ,CAAgBC,WAAW,CAACI,MAA5B,CAAd;EACD;;EAEKC,gBAAgB;IAAA;;IAAA;MACpB,IAAIC,UAAU,GAAGC,MAAM,CAACC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAD,CAAvB;;MACA,IAAIH,UAAU,GAAGI,IAAI,CAACC,GAAL,KAAa,MAA9B,EAAsC;QACpC,KAAI,CAACR,UAAL,CACGS,IADH,CAEI,kBAFJ,EAGI;UACEC,QAAQ,EAAEb,WAAW,CAACc,SADxB;UAEEC,YAAY,EAAEf,WAAW,CAACe;QAF5B,CAHJ,EAOI;UAAEC,OAAO,EAAE,KAAI,CAACZ;QAAhB,CAPJ,EASGa,SATH,CAScC,IAAD,IAAS;UAClBC,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBF,IAAzB;QACD,CAXH;MAYD;IAfmB;EAgBrB;;AAtBuB;;;mBAAbjB,eAAaoB;AAAA;;;SAAbpB;EAAaqB,SAAbrB,aAAa;EAAAsB,YAFZ","names":["HttpHeaders","environment","CommonService","constructor","httpClient","header","checkAccessToken","expires_in","Number","localStorage","getItem","Date","now","post","clientId","client_id","clientSecret","headers","subscribe","resp","console","log","i0","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\admin\\Documents\\GitHub\\newtel\\application-angular\\src\\app\\services\\common.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CommonService {\n  private header: HttpHeaders;\n  constructor(private httpClient: HttpClient) {\n    this.header = new HttpHeaders(environment.header);\n  }\n\n  async checkAccessToken() {\n    let expires_in = Number(localStorage.getItem('expires_in'));\n    if (expires_in < Date.now() + 500000) {\n      this.httpClient\n        .post(\n          'api/refreshToken',\n          {\n            clientId: environment.client_id,\n            clientSecret: environment.clientSecret,\n          },\n          { headers: this.header }\n        )\n        .subscribe((resp) => {\n          console.log('resp123: ', resp);\n        });\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}